---
# tasks file for Apache Kafka


- name: Download Official Apache Kafka & unarchive to /opt/
  unarchive:
    src: "https://archive.apache.org/dist/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"
    dest: "{{ kafka_installation_dir }}/"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    #creates: "{{ kafka_root }}"
    remote_src: yes
  tags:
    - kafka
    - kafka:install


    #enablerepo: cloudera-kafka
    #- kafka
    #- kafka-server


- name: Apache Kafka configuration
  template:
    src: server.properties.j2
    #dest: /etc/kafka/conf/server.properties
    dest: "{{ kafka_conf_dir }}/server.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: 0644
    backup: yes
  notify: 
    - Restart Kafka
    - Wait Kafka to startup
  tags:
    - kafka
    - kafka:install
    - kafka:config
    - kafka:server:properties


- name: Apache Kafka log4j configuration
  template:
    src: log4j.properties.j2
    dest: "{{ kafka_conf_dir }}/log4j.properties"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    mode: '0644'
    backup: yes
  notify: 
    - Restart Kafka
    - Wait Kafka to startup
  tags:
    - kafka
    - kafka:install
    - kafka:config
    - kafka:server:properties


- name: Apache Kafka systemd service file
  template:
    src: etc/systemd/system/kafka.service.j2
    dest: /etc/systemd/system/kafka.service
    owner: root 
    group: root
    mode: 0644
    backup: yes
  notify: 
    - Restart Kafka
    - Wait Kafka to startup
  tags:
    - kafka
    - kafka:install
    - kafka:config
    - kafka:service


- meta: flush_handlers


- name: Check Apache Kafka local (1/2)
  command: "{{ kafka_root }}/bin/kafka-topics.sh --zookeeper localhost:2181/kafka --topic ansible --create --partitions 3 --replication-factor 1"
  register: kafka_create_topic_status
  changed_when: "kafka_create_topic_status.changed and 'Created topic ansible' not in kafka_create_topic_status.stdout and 'already exists' not in kafka_create_topic_status.stdout"
  failed_when: "kafka_create_topic_status.failed and 'already exists' not in kafka_create_topic_status.stdout"
  tags:
    - kafka
    - kafka:check


- name: Check Apache Kafka local (2/2)
  command: "{{ kafka_root }}/bin/kafka-topics.sh --zookeeper localhost:2181/kafka --list"
  register: kafka_topics_list
  changed_when: "kafka_topics_list.changed and 'ansible' not in kafka_topics_list.stdout"
  tags:
    - kafka
    - kafka:check



